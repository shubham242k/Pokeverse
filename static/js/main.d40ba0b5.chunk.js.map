{"version":3,"sources":["Components/DetailCard.jsx","Components/History.jsx","fetchData.js","Components/SearchSection.jsx","Components/SmallCard.jsx","Components/DisplaySection.jsx","App.js","index.js"],"names":["DetailCard","pokemon","statsShort","className","sprites","other","dream_world","front_default","src","alt","name","toUpperCase","types","map","typeObj","i","type","abilities","abilityObj","ability","height","base_experience","weight","stats","statsObj","stat","base_stat","History","useContext","authContext","history","setSelected","his","onClick","fetchData","url","a","Promise","resolve","reject","fetch","then","response","json","data","catch","err","getPokemonRecord","fetchDifferentUrl","fetchPokemonOfType","SearchSection","props","useState","setType","pokemonName","SetPokemonName","prefix","setPrefix","suggestedList","setSuggestedList","useEffect","res","results","gettingNames","obj","sort","setSearchPokemon","arr","filter","startsWith","console","log","length","namesOfPokemon","pokemonObj","class","placeholder","value","onChange","e","currentTarget","innerText","setTypeSelected","SmallCard","setHistory","renew","pokemonname","shift","handleHistory","DisplaySection","baseUrl","pokemons","setPokemons","nextUrl","setNextUrl","isLoading","setLoading","currentStart","setcurrentStart","arrpok","setarrpok","typeWanted","gettingTypePokemons","searchPokemon","record","Math","min","push","loadingNextUrl","loadingPokemonOfType","loadingNextPokemons","all","next","loadingPokemon","allPokemons","pok","onScroll","event","ceil","target","scrollHeight","scrollTop","clientHeight","createContext","App","selected","typeSelected","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d40ba0b5.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"../CSS/DetailCard.css\"\r\nlet DetailCard = ({pokemon})=>{\r\n    let statsShort = {\r\n        \"hp\":\"HP\",\r\n        \"attack\":\"ATK\",\r\n        \"defense\":\"DEF\",\r\n        \"special-attack\":\"SpA\",\r\n        \"special-defense\":\"SpD\",\r\n        \"speed\":\"SPD\"\r\n    \r\n    }\r\n    // console.log(pokemon);\r\n    return(\r\n        \r\n        <div className=\"col-5 detail-card-container\">\r\n            {pokemon == null ? \"\" :\r\n\r\n            <div className = \"image\">\r\n                {\r\n                 pokemon.sprites.other.dream_world.front_default !== null?\r\n                <img src={pokemon.sprites.other.dream_world.front_default} alt=\"select\" /> :\r\n                <img src={pokemon.sprites.other[\"official-artwork\"].front_default} alt=\"select\" />\r\n\r\n                }\r\n            </div>\r\n            }\r\n            <div className = \"all-info-container\">\r\n            {pokemon == null ? \"\" : \r\n                <>\r\n                {/* <div className = \"number\">pokemon.id</div> */}\r\n                <div className = \"name\">{pokemon.name.toUpperCase()}</div>\r\n                <div className = \"types mb-2\">\r\n                    {\r\n                        pokemon.types.map((typeObj,i)=>{\r\n                            return <span className=\"type\" key={i}>\r\n                                {typeObj.type.name.toUpperCase()}\r\n                            </span>\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <div className = \"line-breaker\"></div>\r\n                <div className = \"section abilities mb-2\">\r\n                    <div>ABILITIES</div>\r\n                    <div>\r\n                    {\r\n                        pokemon.abilities.map((abilityObj,i)=>{\r\n                            return <span className=\"block\" key={i}>\r\n                                {abilityObj.ability.name.toUpperCase()}\r\n                            </span>\r\n                        })\r\n                    }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"line-breaker\"></div>\r\n\r\n                <div className = \"figure-data mb-2\">\r\n                    <div className = \"section height mb-2\">\r\n                        <div>HEIGHT</div>\r\n                        <span className=\"block\">{pokemon.height}m</span>\r\n                    </div>\r\n                    <div className = \"section base-experience mb-2\">\r\n                        <div>BASE EXPERIENCE</div>\r\n                        <span className=\"block\">{pokemon.base_experience}</span>\r\n                    </div>\r\n                    <div className = \"section height mb-2\">\r\n                        <div>WEIGHT</div>\r\n                        <span className=\"block\">{pokemon.weight}kg</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"stats mt-4\">\r\n                    {\r\n                        pokemon.stats.map((statsObj)=>{\r\n                            return(\r\n                                <div className = \"stat-background\">\r\n                                    <div className=\"stat-name\">{statsShort[statsObj.stat.name]}</div>\r\n                                    <div className= \"stat-quantity\">{statsObj.base_stat}</div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                </>\r\n            }\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default DetailCard;","import { useContext } from \"react\"\r\nimport { authContext } from \"../App\"\r\nimport \"../CSS/History.css\"\r\n\r\nlet History = ()=>{\r\n    let {history,setSelected}= useContext(authContext);\r\n    return (\r\n    <div className = \"history-container\">\r\n        {\r\n            history.map((his)=>{\r\n                return <div className = \"each-history\"\r\n                onClick={()=>{\r\n                    setSelected(his);\r\n                }}>\r\n                    <img src={his.sprites.front_default} alt=\"\" />\r\n                </div>\r\n            })\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default History","\r\nexport const fetchData = async (url)=>{\r\n    return new Promise((resolve,reject) =>{\r\n        fetch(url)\r\n        .then((response) => response.json())\r\n        .then(data=> resolve(data))\r\n        .catch((err)=>{\r\n            reject(err)\r\n        })\r\n    })\r\n\r\n    \r\n}\r\n\r\nexport const getPokemonRecord = async(url)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(url)\r\n        .then((response) => response.json())\r\n        .then(data=> resolve(data))\r\n        .catch((err)=>{\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n\r\nexport const fetchDifferentUrl = async(url)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(url)\r\n        .then((response) => response.json())\r\n        .then(data=>resolve(data))\r\n        .catch((err)=>{\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n\r\nexport const fetchPokemonOfType =  async(url)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(url)\r\n        .then((response) => response.json())\r\n        .then(data=>resolve(data))\r\n        .catch((err)=>{\r\n            reject(err)\r\n        })\r\n    })\r\n}","import { useEffect, useState } from \"react\";\r\nimport \"../CSS/SearchBar.css\"\r\nimport History from \"./History\";\r\nimport { fetchDifferentUrl, fetchPokemonOfType } from \"../fetchData\";\r\nlet SearchSection = (props)=>{\r\n    let [types,setType] = useState([]);\r\n    let [pokemonName,SetPokemonName] = useState([]);\r\n    let [prefix,setPrefix] = useState(\"\");\r\n    let [suggestedList,setSuggestedList] = useState([]);\r\n    useEffect(async()=>{\r\n        let res = await fetchDifferentUrl(\"https://pokeapi.co/api/v2/type/\");\r\n        setType(res.results);\r\n        // console.log(types);\r\n        \r\n    },[]);\r\n    useEffect(async()=>{\r\n        let obj = await gettingNames();\r\n        obj.sort();\r\n        SetPokemonName(obj);\r\n    },[types]);\r\n    useEffect(async()=>{\r\n    },[pokemonName]);\r\n\r\n    useEffect(()=>{\r\n        if(prefix === \"\"){\r\n            setSuggestedList([]);\r\n            props.setSearchPokemon(\"\");\r\n        }else{\r\n            let arr = pokemonName.filter(name => {\r\n                return name.startsWith(prefix)\r\n            });\r\n            console.log(arr);\r\n            setSuggestedList(arr);\r\n        }\r\n    },[prefix])\r\n    let gettingNames = async() =>{\r\n        let obj = [];\r\n        for(let i = 0; i < types.length ; i++){\r\n            let type = types[i];\r\n            let response = await fetchPokemonOfType(type.url);\r\n            \r\n            let arr = namesOfPokemon(response);\r\n            obj = [...obj,...arr];\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    let namesOfPokemon = (response)=>{\r\n        \r\n        let arr = response.pokemon.map((pokemonObj)=>{\r\n            return pokemonObj.pokemon.name;\r\n        })\r\n        return arr;\r\n    }\r\n    return(\r\n        <div>\r\n            <div class=\"search-bar mb-3\" >\r\n                <input type=\"text\" className=\"search-input\"placeholder=\"Search Pokemon\"\r\n                value = {prefix}\r\n                onChange = {(e)=>{\r\n                    console.log(e.currentTarget.value);\r\n                    setPrefix(e.currentTarget.value);\r\n                }}/>\r\n                \r\n                \r\n                <div className=\"search-list\">\r\n                {\r\n                    suggestedList.map((value,i)=>{\r\n                        return <div key={i} className=\"dropdown-item\"\r\n                        onClick={\r\n                            (e)=>{\r\n                                props.setSearchPokemon(e.currentTarget.innerText);\r\n                                setSuggestedList([]);\r\n                            }\r\n                        }>{value}</div>\r\n                    })\r\n                }\r\n                \r\n                </div>\r\n\r\n                \r\n            </div>\r\n\r\n            <div className = \"second-search-bar justify-contend-end\">\r\n                <div className = \"filter-container row\">\r\n                    <div class=\"dropdown col-9\">\r\n                        <div className=\"dropdown-select \">\r\n                            <span className=\"select\">Type</span>\r\n                            <span class=\"material-icons\">arrow_drop_down</span>\r\n                        </div>\r\n                        <div className=\"dropdown-list\">\r\n                            {\r\n                                types.map((type,i)=>{\r\n                                    return <div key={i} className=\"dropdown-item\"\r\n                                    onClick={\r\n                                        (e)=>{\r\n                                            props.setTypeSelected(e.currentTarget.innerText);\r\n                                        }\r\n                                    }>{type.name}</div>\r\n                                })\r\n                            }\r\n                            \r\n                \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"reset\"\r\n                        onClick = {()=>{\r\n                            props.setTypeSelected(\"\")\r\n                        }  \r\n                        }>\r\n                        <span class=\"material-icons\">refresh</span>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <History></History>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchSection;\r\n","import { useContext } from \"react\"\r\nimport { authContext } from \"../App\"\r\nimport \"../CSS/SmallCard.css\"\r\nlet SmallCard = ({ pokemon }) => {\r\n    let {setSelected,setHistory,history} = useContext(authContext);\r\n    let handleHistory = ()=>{\r\n        let arr = history;\r\n        arr = renew(arr,pokemon.name);\r\n        if(arr.length == 5) arr.shift();\r\n        setHistory([...arr,pokemon]);\r\n    }\r\n    let renew = (arr,pokemonname)=>{\r\n        return arr.filter((value)=>{\r\n            return value.name !== pokemonname;\r\n        })\r\n    }\r\n    return (\r\n\r\n        <div className=\"card-container\"\r\n            onClick={() => {\r\n                setSelected(pokemon);\r\n                handleHistory();\r\n            }}>\r\n            <div className=\"intro-container\">\r\n                <div className=\"pokemon-image\">\r\n                    <img src={pokemon.sprites.front_default} alt=\"\" />\r\n                </div>\r\n                <div className=\"pokemon-name\">\r\n                    <span>{pokemon.name.toUpperCase()}</span>\r\n                </div>\r\n\r\n                <div className=\"types\">\r\n                    {\r\n                        pokemon.types.map((typeObj, i) => {\r\n                            return <span className=\"type\" key={i}>\r\n                                {typeObj.type.name.toUpperCase()}\r\n                            </span>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SmallCard;","import { useEffect, useState } from \"react\";\r\nimport SmallCard from \"../Components/SmallCard\";\r\nimport \"../CSS/DisplaySection.css\";\r\nimport { fetchData, fetchPokemonOfType, getPokemonRecord } from \"../fetchData\";\r\n\r\n\r\nlet DisplaySection = (props) => {\r\n    let baseUrl = \"https://pokeapi.co/api/v2/pokemon\"\r\n    let [pokemons, setPokemons] = useState([]);\r\n    let [nextUrl, setNextUrl] = useState(baseUrl);\r\n    let [isLoading, setLoading] = useState(true);\r\n    let [currentStart,setcurrentStart] = useState(0); //used in filter for loading (currentStar + 20) pokemons \r\n    let [arrpok,setarrpok] = useState([]); //contains all pokemon of particular type, and them after scrolling to bottom load next 20 pokemons\r\n\r\n    //when type of pokemon is changed\r\n    useEffect(async () => {\r\n        setcurrentStart(0);\r\n        if(props.typeWanted !== \"\"){\r\n            gettingTypePokemons();\r\n        }else{\r\n            setLoading(true);\r\n            setPokemons([]);\r\n            setNextUrl(baseUrl);\r\n        }\r\n        \r\n    },[props.typeWanted]);\r\n\r\n    //when searching pokemon\r\n    useEffect(async()=>{\r\n        if(props.searchPokemon !== \"\"){\r\n            let record = await getPokemonRecord(`https://pokeapi.co/api/v2/pokemon/${props.searchPokemon}`);\r\n            setPokemons([record]);\r\n        }else{\r\n            setLoading(true);\r\n            setPokemons([]);\r\n            setNextUrl(baseUrl);\r\n        }\r\n    },[props.searchPokemon]);\r\n\r\n    //loading next 20 pokemons of particular type\r\n    useEffect(()=>{\r\n        let arr = [];\r\n        for(let i = currentStart; i < Math.min(currentStart+20,arrpok.length);i++){\r\n            arr.push(arrpok[i]);\r\n        }\r\n        setPokemons(arr);\r\n    },[arrpok])\r\n\r\n    //loading normally when hit the bottom\r\n    useEffect(async () => {\r\n        console.log(isLoading);\r\n        loadingNextUrl();\r\n    }, [isLoading]);\r\n\r\n    //functions used in getting particular type of pokemons and loading next pokemons of that type\r\n    let gettingTypePokemons = async() =>{\r\n        let response = await fetchPokemonOfType(`https://pokeapi.co/api/v2/type/${props.typeWanted}`);\r\n\r\n        let arr = await loadingPokemonOfType(response.pokemon);\r\n        setarrpok(arr);\r\n        loadingNextPokemons();\r\n    }\r\n    let loadingNextPokemons = () =>{\r\n        let a = [];\r\n        for(let i = currentStart; i < Math.min(currentStart+20,arrpok.length);i++){\r\n            a.push(arrpok[i]);\r\n        }\r\n        setPokemons([...pokemons,...a]);\r\n        setcurrentStart(Math.min(currentStart+20,arrpok.length));\r\n    }\r\n    let loadingPokemonOfType = async (data) =>{\r\n        let pokemons = Promise.all(\r\n            data.map(async(pokemonObj)=>{\r\n                let record = await getPokemonRecord(pokemonObj.pokemon.url);\r\n                return record;\r\n            })\r\n        )\r\n\r\n        return pokemons;\r\n    }\r\n    // ****************************\r\n    \r\n    //for loading all pokemons and infinite scroll\r\n    let loadingNextUrl = async () => {\r\n        if (!isLoading) return;\r\n        let response = await fetchData(nextUrl);\r\n        setNextUrl(response.next);\r\n        let arr = await loadingPokemon(response.results);\r\n        let allPokemons = arr.filter((pok) => { return pok != null })\r\n        setPokemons([...pokemons, ...allPokemons]);\r\n        setLoading(false);\r\n    }\r\n    let loadingPokemon = async (data) => {\r\n        let pokemons = Promise.all(\r\n            data.map(async (pokemon) => {\r\n                let record = await getPokemonRecord(pokemon.url);\r\n                return record;\r\n                \r\n            })\r\n        )\r\n        return pokemons;\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"all-card-container\" onScroll={\r\n            (event) => {\r\n\r\n                const bottom = Math.ceil(event.target.scrollHeight - event.target.scrollTop) == event.target.clientHeight;\r\n                if (bottom) {\r\n                    if(props.typeWanted === \"\")\r\n                        setLoading(true);\r\n                    else loadingNextPokemons();\r\n                }\r\n\r\n            }\r\n        }>\r\n            {\r\n\r\n                pokemons.map((pokemon, i) => {\r\n                    return pokemon == null ? \"\" : <SmallCard key={i} pokemon={pokemon}></SmallCard>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplaySection;","import DetailCard from \"./Components/DetailCard\";\nimport SearchSection from \"./Components/SearchSection\";\nimport DisplaySection from \"./Components/DisplaySection.jsx\";\nimport \"./CSS/App.css\";\nimport { createContext, useEffect, useState } from \"react\";\n\nexport const authContext = createContext();\n\nfunction App() {\n  let [selected,setSelected] = useState(null);\n  let [typeSelected,setTypeSelected] = useState(\"\");\n  let [searchPokemon,setSearchPokemon] = useState(\"\");\n  let [history,setHistory] = useState([]);\n  useEffect(()=>{\n    console.log(history)\n  },[history])\n  return (\n   \n    <authContext.Provider value = {{setSelected,setHistory,history}}>\n      <div className=\"background row\">\n        <div className = \"left-container col-8\">\n          <SearchSection \n          setTypeSelected = {setTypeSelected}\n          setSearchPokemon = {setSearchPokemon}></SearchSection>\n          <DisplaySection \n          searchPokemon = {searchPokemon}\n          typeWanted = {typeSelected}></DisplaySection>\n        </div>\n        <div className = \"right-container col-4\">\n          <DetailCard pokemon = {selected}></DetailCard>\n        </div>\n        \n        \n      </div>\n    </authContext.Provider>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}